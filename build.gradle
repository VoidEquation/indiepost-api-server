buildscript {
    ext {
        springBootVersion = '1.5.8.RELEASE'
        querydslVersion = "4.1.4"
    }
    repositories {
        mavenCentral()
        jcenter()

    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

apply plugin: 'java'
apply plugin: 'org.springframework.boot'
apply plugin: 'idea'

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencies {
    compile('org.springframework.boot:spring-boot-starter-web')
    compile('org.springframework.boot:spring-boot-starter-data-jpa')
    compile('org.springframework.boot:spring-boot-starter-security')
    compile('org.springframework.boot:spring-boot-starter-thymeleaf')
    compile('org.springframework.boot:spring-boot-starter-validation')
    compile('org.springframework.boot:spring-boot-starter-mail')
    compile('org.springframework.boot:spring-boot-devtools')
    compile("com.querydsl:querydsl-core:${querydslVersion}")
    compile("com.querydsl:querydsl-apt:${querydslVersion}")
    compile("com.querydsl:querydsl-jpa:${querydslVersion}")
    compile group: 'org.elasticsearch', name: 'elasticsearch', version: '6.0.1'
    compile group: 'io.searchbox', name: 'jest', version: '5.3.3'
    compile group: 'net.sourceforge.nekohtml', name: 'nekohtml', version: '1.9.22'
    compile group: 'org.thymeleaf.extras', name: 'thymeleaf-extras-springsecurity4', version: '2.1.2.RELEASE'
    compile group: 'org.thymeleaf.extras', name: 'thymeleaf-extras-java8time', version: '2.1.0.RELEASE'
    runtime('mysql:mysql-connector-java')
    compile('org.springframework.boot:spring-boot-starter-test')
    compile group: 'commons-codec', name: 'commons-codec', version: '1.10'
    compile group: 'commons-io', name: 'commons-io', version: '2.5'
    compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.5'
    compile group: 'org.imgscalr', name: 'imgscalr-lib', version: '4.2'//platform.twitter.com/widgets.js
    compile group: 'org.json', name: 'json', version: '20160810'
    compile 'org.springframework.boot:spring-boot-configuration-processor'
    compile('com.github.v-ladynev:fluent-hibernate-core:0.3.1') {
        exclude group: 'org.hibernate'
    }
    compile('com.zaxxer:HikariCP:2.7.4')
    compile group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-hibernate5'
    compile group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-jsr310'
    compile group: 'cz.jiripinkas', name: 'jsitemapgenerator', version: '2.2'
    compile group: 'com.sangupta', name: 'murmur', version: '1.0.0'
    compile group: 'com.amazonaws', name: 'aws-java-sdk', version: '1.11.163'
    compile group: 'org.jsoup', name: 'jsoup', version: '1.10.3'
    compile group: 'org.apache.commons', name: 'commons-collections4', version: '4.1'
    compile 'com.auth0:java-jwt:3.3.0'

    testCompile group: 'org.springframework.security', name: 'spring-security-test', version: '4.2.3.RELEASE'
    testCompile group: 'org.assertj', name: 'assertj-core', version: '3.8.0'

    compile files('local_libs/ua-parser-1.3.1-SNAPSHOT.jar')
}

test {
    useJUnit {
        include '**/*UnitTests.class'
    }
}

task integrationTest(type: Test) {
    useJUnit {
        exclude '**/*UnitTests.class'
    }
}

compileJava.dependsOn(processResources)

sourceSets {
    generated {
        java {
            srcDirs = ["src/main/generated"]
        }
    }
}

configurations {
    querydslapt
}

task generateQueryDSL(type: JavaCompile, group: 'build', description: 'Query dsl Generator') {
    source = sourceSets.main.java
    classpath = configurations.compile + configurations.querydslapt
    options.compilerArgs = [
            "-proc:only",
            "-processor", "com.querydsl.apt.jpa.JPAAnnotationProcessor"
    ]
    options.encoding = 'UTF-8'
    destinationDir = sourceSets.generated.java.srcDirs.iterator().next()
}

compileJava {
    dependsOn generateQueryDSL
    source generateQueryDSL.destinationDir
}

compileGeneratedJava {
    dependsOn generateQueryDSL
    options.warnings = false
    classpath += sourceSets.main.runtimeClasspath
}

clean {
    delete sourceSets.generated.java.srcDirs.iterator().next()
}
